version: '3.8'

services:
  nginx:
    restart: unless-stopped
    container_name: nginx
    image: nginx:1.25.2
    volumes:
      - ./media:/var/www/html/media
      - ./static:/var/www/html/static
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    networks:
      - scrapper_net
    depends_on:
      - django

  django:
    restart: unless-stopped
    container_name: django
    build:
      context: ./code
      dockerfile: Dockerfile
    command: python3 manage.py runserver 0.0.0.0:8080
    volumes:
      - ./code:/app/code
      - ./static:/app/static
      - ./media:/app/media
    env_file:
      - ./code/.env.dev
    depends_on:
      - db
    networks:
      - scrapper_net

  scrapper:
    restart: unless-stopped
    container_name: scrapper
    build:
      context: ./code
      dockerfile: Dockerfile
    command: celery -A scrapper worker -B -E -c 1 -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler --max-tasks-per-child=1
    volumes:
      - ./code:/app/code
      - ./media:/app/media
    env_file:
      - ./code/.env.dev
    depends_on:
      - db
      - rabbitmq
    networks:
      - scrapper_net

  flower:
    restart: unless-stopped
    container_name: flower
    build:
      context: ./code
      dockerfile: Dockerfile
    command: celery -A scrapper flower --port=5555 --url_prefix=flower --basic-auth=scrapper:scrapper
    volumes:
      - ./code:/app/code
    env_file:
      - ./code/.env.dev
    depends_on:
      - db
      - rabbitmq
    networks:
      - scrapper_net

  db:
    restart: unless-stopped
    container_name: db
    image: postgres:15.4
    volumes:
      - ./postgres/data/:/var/lib/postgresql/data/
    env_file:
      - ./postgres/.env.dev
    ports:
      - "5432:5432"
    networks:
      - scrapper_net

  rabbitmq:
    restart: unless-stopped
    container_name: rabbitmq
    image: rabbitmq:3.9-alpine
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq
    networks:
      - scrapper_net
    env_file:
      - ./rabbitmq/.env.dev

  splash:
    restart: unless-stopped
    container_name: splash
    image: scrapinghub/splash
    networks:
      - scrapper_net

networks:
  scrapper_net:
    driver: bridge